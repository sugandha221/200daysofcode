#!/bin/python3

'''Q-1'''

import math
import os
import random
import re
import sys

# Complete the repeatedString function below.
def repeatedString(s, n):
    cn=0
    div=int(n)/len(s)
    rem=n%len(s)
    cn+=s.count('a')*int(div)
    aa=s[0:rem]
    cn+=aa.count('a')
    print(int(cn))
    return(int(cn))
    

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    n = int(input())

    result = repeatedString(s, n)

    fptr.write(str(result) + '\n')

    fptr.close()

    
    
    
    
    #!/bin/python3

    '''Q-2'''
    
    
import math
import os
import random
import re
import sys

# Complete the taumBday function below.
def taumBday(b, w, bc, wc, z):
    if bc+z<wc:
        cost=w*(z)+((b+w)*bc)
    elif wc+z<bc:
        cost=b*(z)+((w+b)*wc)
    else:
        cost=(b*bc)+(w*wc)
    return(cost)

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    t = int(input())

    for t_itr in range(t):
        bw = input().split()

        b = int(bw[0])

        w = int(bw[1])

        bcWcz = input().split()

        bc = int(bcWcz[0])

        wc = int(bcWcz[1])

        z = int(bcWcz[2])

        result = taumBday(b, w, bc, wc, z)

        fptr.write(str(result) + '\n')

    fptr.close()
