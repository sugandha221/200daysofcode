#!/bin/python3

'''Q-1'''


import math
import os
import random
import re
import sys

# Complete the serviceLane function below.
def serviceLane(n, cases, width):
    c=[]
    for i in range(0,len(cases)):
        a=cases[i][0]
        b=cases[i][1]
        c.append(min(width[a:b+1]))
    return(c)
    

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    nt = input().split()

    n = int(nt[0])

    t = int(nt[1])

    width = list(map(int, input().rstrip().split()))

    cases = []

    for _ in range(t):
        cases.append(list(map(int, input().rstrip().split())))

    result = serviceLane(n, cases, width)

    fptr.write('\n'.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
    
    
    #!/bin/python3

'''Q-2'''


import math
import os
import random
import re
import sys

# Complete the chocolateFeast function below.
def chocolateFeast(n, c, m):
    sum=0
    summ=int(n/c)
    summ+=int((n/c)/int(m))
    rem=int(n/c)/int(m)
    mod=int(n/c)%(m)
    summ+=int(rem+mod)/m
    return(int(summ))

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    t = int(input())

    for t_itr in range(t):
        ncm = input().split()

        n = int(ncm[0])

        c = int(ncm[1])

        m = int(ncm[2])

        result = chocolateFeast(n, c, m)

        fptr.write(str(result) + '\n')

    fptr.close()
        

